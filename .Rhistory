shiny::runApp('src')
runApp('src')
sorted
runApp('src')
runApp('src')
sorted
runApp('src')
runApp('src')
merged
merged[1.]
x = merged[1,]
x
x = merged[,1]
x
y = merged[,2]
z = merged[,3]
library(rgl)
require(rgl)
install.packages("rgl")
library("rgl")
library(rgl)
classified
class(classified)
shiny::runApp('src')
runApp('src')
shiny::runApp('src')
runApp('src')
runApp('src')
install.packages("rgl")
library(rgl)
install.packages("rgl")
require(rgl)
plot3d(classified[,1:3])
install.packages("rgl", repos='http://cran.cnr.berkeley.edu/')
require(rgl)
require(rgl)
plot3d(classified[,1:3])
classified[,1:3]
merged[,1:3]
plot3d(merged[,1:3])
classified
shiny::runApp('src')
runApp('src')
system.file("shinySimple", package = "rgl")
system.file("shinySimple", package = "rgl")
system.file("shinyDemo", package = "rgl")
runApp('src')
plot3d(merged[,1:3])
runApp('src')
plot3d(merged[,1:3])
plot3d(merged[,1],merged[,2],merged[,3])
library(rgl)
scene3d(())
scene3d()
scene3d(plot3d(mergedp[,1:3]))
runApp('src')
x = merged[,1]
x
y = merged[,2]
y
z = merged[,3]
z
merged[,0]
plot3d(x,y,z)
options(rgl.printRglwidget = TRUE)
plot3d(x,y,z)
plot3d(x,y,z,col = red)
plot3d(x,y,z,col = 'red')
plot3d(merged[,1:3])
options(rgl.useNULL = TRUE)
plot3d(merged[,1:3])
options(rgl.printRglwidget = FALSE)
plot3d(merged[,1:3])
plot3d(merged[,1:3])
options(rgl.printRglwidget = TRUE)
plot3d(merged[,1:3])
open3d()
shiny::runApp('src')
runApp('src')
classified
sorted
plot(sorted[,1],1:10)
plot(sorted[,1])
plot(sorted[,1], type = line)
plot(sorted[,1], type = l)
plot(sorted[,1], type = 'l')
classified
classified
merged
classified
merged
sorted
if(merged[,4] == 818){
test = merged[,1:3]
}
getwd()
read.xlsx ("dataset.xlsx",1)
require(openxlsx)
read.xlsx ("dataset.xlsx",1)
dataset = read.xlsx ("dataset.xlsx",1)
require(dbscan)
db = dbscan(dataset, 1,3)
db
str(db)
max(db$cluster)
summary(db)
db$cluster == 808
db$cluster == 1
if (db$cluster == 808){}
try = db$cluster ==808
db[db$cluster == 808,]
db[db$cluster == 808]
try = db[db$cluster==808]
try
try = db[db$cluster == 808]
try
try = db[db$cluster == 1]
try
summary(try)
try
db
db[1,1]
db[1,1,1]
db[1]
db[4,4]
str(db)
db[db$cluster == 1]
db_filtered = db[db$cluster == 1]
db_filtered
View(db_filtered)
db_filtered = db[db$cluster == 1,]
db_filtered = db[,db$cluster == 1]
db
max(db)
pairs(dataset,col = db$cluster + 1L)
db = dbscan(dataset, 2,3)
pairs(dataset,col = db$cluster + 1L)
db = dbscan(dataset, 3,3)
pairs(dataset,col = db$cluster + 1L)
db = dbscan(dataset, 3,2)
pairs(dataset,col = db$cluster)
shiny::runApp('src')
db_filtered = merged[merged$`Eps 2 MinPts 3` == "808",]
db filtered
db_filtered
db_filtered = merged[merged$`Eps 2 MinPts 3` == "808",merged$`Eps 2 MinPts 3`]
sorted
db_filtered = merged[merged$`Eps 2 MinPts 3` == "758",]
db_filtered
plot3d(db_filtered[,1:3])
db_filtered = merged[merged$`Eps 2 MinPts 3` == "1",]
plot3d(db_filtered[,1:3])
runApp('src')
View(sorted)
View(sorted)
sort(sorted[1,])
runApp('src')
View(sorted)
View(sorted)
sort(sorted[1,])
summary(sorted[1,])
names(sort(summary(as.factor(sorted[1,])), decreasing=T)[1:3])
names(sort(summary(sorted[1,]), decreasing=T)[1:3])
sort(summary(sorted[1,]), decreasing=T)
1:3(sort(summary(sorted[1,]), decreasing=T))
try = sort(summary(sorted[1,]), decreasing=T)
try[1:3]
summary(try)
sort(summary(sorted[1,]))
sort(sorted[1,])
names(which.max(sorted[1,])
)
names(which.max(sorted[1,]))
names(which.max(sorted[1,]))
names(which.max(sorted[2,]))
summary(sorted[2,])
names(which.max(summary(sorted)))
names(which.max(summary(sorted[2,])))
names(which.max(summary(sorted)))
names(which.max(sorted[2,]))
runApp('src')
names(which.max(sorted[1,]))
topcluster = names(which.max(sorted[1,]))
topcluster
sorted[1,topcluster]
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
try = merged[merged$`Eps 2 MinPts 3`]
try = merged[merged$`Eps 2 MinPts 3`,]
runApp('src')
runApp('src')
runApp('src')
runApp('src')
View(db_filtered)
runApp('src')
runApp('src')
plot3d(try[,1],try[,2],try[,3])
View(try)
View(try)
db_filtered = merged[merged$`Eps 2 MinPts 3` == "1",]
db_filtered = merged[merged$`Eps 2 MinPts 3` == "1",1:3]
View(db_filtered)
View(db_filtered)
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 3 MinPts 3` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 3 MinPts 2` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 3 MinPts 4` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
View(merged)
View(sorted)
db_filtered = merged[merged$`Eps 3 MinPts 4` == "1",1:3]
db_filtered = merged[merged$`Eps 1 MinPts 3` == "1",1:3]
View(sorted)
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 3 MinPts 1` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 2 MinPts 3` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
db_filtered = merged[merged$`Eps 1 MinPts 3` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
runApp('src')
runApp('src')
db_filtered = merged[merged$`Eps 1 MinPts 3` == "1",1:3]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
runApp('src')
runApp('src')
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3], col = "brown")
runApp('src')
runApp('src')
db_filtered = merged[merged$`Eps 2 MinPts 3` == "1",]
plot3d(db_filtered[,1],db_filtered[,2],db_filtered[,3])
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
