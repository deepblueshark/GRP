
shiny::runApp('src')
runApp('src')
sorted
runApp('src')
runApp('src')
sorted
runApp('src')
runApp('src')
merged
merged[1.]
x = merged[1,]
x
x = merged[,1]
x
y = merged[,2]
z = merged[,3]
library(rgl)
require(rgl)
install.packages("rgl")
library("rgl")
library(rgl)
classified
class(classified)
shiny::runApp('src')
runApp('src')
shiny::runApp('src')
runApp('src')
runApp('src')
install.packages("rgl")
library(rgl)
install.packages("rgl")
require(rgl)
plot3d(classified[,1:3])
install.packages("rgl", repos='http://cran.cnr.berkeley.edu/')
require(rgl)
require(rgl)
plot3d(classified[,1:3])
classified[,1:3]
merged[,1:3]
plot3d(merged[,1:3])
classified
shiny::runApp('src')
runApp('src')
system.file("shinySimple", package = "rgl")
system.file("shinySimple", package = "rgl")
system.file("shinyDemo", package = "rgl")
runApp('src')
plot3d(merged[,1:3])
runApp('src')
plot3d(merged[,1:3])
plot3d(merged[,1],merged[,2],merged[,3])
library(rgl)
scene3d(())
scene3d()
scene3d(plot3d(mergedp[,1:3]))
runApp('src')
x = merged[,1]
x
y = merged[,2]
y
z = merged[,3]
z
merged[,0]
plot3d(x,y,z)
options(rgl.printRglwidget = TRUE)
plot3d(x,y,z)
plot3d(x,y,z,col = red)
plot3d(x,y,z,col = 'red')
plot3d(merged[,1:3])
options(rgl.useNULL = TRUE)
plot3d(merged[,1:3])
options(rgl.printRglwidget = FALSE)
plot3d(merged[,1:3])
plot3d(merged[,1:3])
options(rgl.printRglwidget = TRUE)
plot3d(merged[,1:3])
open3d()